name: Playwright Tests
on:
  workflow_dispatch:
  # push:
  #   branches: [ main, master ]
  # pull_request:
  #   branches: [ main, master ]
jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        id: install-dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        id: install-playwright-browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

  test:
    name: Tests - ${{ matrix.project }} - Shard ${{ matrix.shardIndex }} of ${{ matrix.shardTotal }}
    runs-on: ubuntu-latest
    needs: [install]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
        shardIndex: [1, 2]
        shardTotal: [2]
    steps:
    - name: Checkout Repository
      id: checkout-repository
      uses: actions/checkout@v3
    - name: Setup Node
      id: setup-node
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Cache Node Modules
      uses: actions/cache@v3
      id: cache-node-modules
      with:
        path: |
          node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - name: Cache Playwright Binaries
      uses: actions/cache@v3
      id: cache-playwright
      with:
        path: |
          ~/.cache/ms-playwright
        key: playwright-${{ hashFiles('package-lock.json') }}
    # Playwright caches the browser binaries, but not their dependencies. 
    # Those extra browser dependencies must be installed separately when the cached browsers are restored.
    - name: Install Playwright System Dependencies
      id: install-playwright-system-dependencies
      run: npx playwright install-deps ${{ matrix.project }}
    - name: Run Playwright Tests
      id: run-playwright-tests
      run: BASE_URL='https://automationintesting.online' npx playwright test --project=${{ matrix.project }} --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
    - name: Upload Playwright HTML Report
      id: upload-playwright-html-report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-${{ matrix.project }}-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
        path: playwright-report/
        if-no-files-found: ignore
        retention-days: 3
    - name: Upload Playwright Test Results
      id: upload-playwright-test-results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.project }}-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
        path: test-results/
        if-no-files-found: ignore
        retention-days: 3
    - name: Upload Playwright Monocart Report
      id: upload-playwright-monocart-report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: monocart-report-${{ matrix.project }}-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
        path: playwright-monocart-report/
        if-no-files-found: ignore
        retention-days: 3